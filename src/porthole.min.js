/*
	Copyright (c) 2011 Ternary Labs. All Rights Reserved.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
*//**
	* @fileOverview Porthole, a small library for secure cross-domain iFrame communication.
	* @author <a href="mailto:georges@ternarylabs.com">Georges Auberger</a>
	*//*
# Websequencediagrams.com
participant abc.com
participant "iFrame proxy xyz.com"
participant "iFrame proxy abc.com"
participant "iFrame xyz.com"
abc.com->iFrame proxy xyz.com: postMessage(data, targetOrigin)
note left of "iFrame proxy xyz.com": Set url fragment and change size
iFrame proxy xyz.com->iFrame proxy xyz.com: onResize Event
note right of "iFrame proxy xyz.com": read url fragment
iFrame proxy xyz.com->iFrame xyz.com: forwardMessageEvent(event)
iFrame xyz.com->iFrame proxy abc.com: postMessage(data, targetOrigin)
note right of "iFrame proxy abc.com": Set url fragment and change size
iFrame proxy abc.com->iFrame proxy abc.com: onResize Event
note right of "iFrame proxy abc.com": read url fragment
iFrame proxy abc.com->abc.com: forwardMessageEvent(event)
*//**
 * Namespace for Porthole, a small library for secure cross-domain iFrame communication.
 */var Porthole=typeof Porthole=="undefined"||!Porthole?{}:Porthole;Porthole={trace:function(a){try{console.log("Porthole: "+a)}catch(b){}},error:function(a){try{console.error("Porthole: "+a)}catch(b){}}},Porthole.WindowProxy=function(){},Porthole.WindowProxy.prototype={postMessage:function(){},addEventListener:function(a){},removeEventListener:function(a){}},Porthole.WindowProxyLegacy=function(a,b){b===undefined&&(b=""),this.targetWindowName=b,this.eventListeners=[],this.origin=window.location.protocol+"//"+window.location.host,a!==null?(this.proxyIFrameName=this.targetWindowName+"ProxyIFrame",this.proxyIFrameLocation=a,this.proxyIFrameElement=this.createIFrameProxy()):this.proxyIFrameElement=null},Porthole.WindowProxyLegacy.prototype={getTargetWindowName:function(){return this.targetWindowName},getOrigin:function(){return this.origin},createIFrameProxy:function(){var a=document.createElement("iframe");return a.setAttribute("id",this.proxyIFrameName),a.setAttribute("name",this.proxyIFrameName),a.setAttribute("src",this.proxyIFrameLocation),a.setAttribute("frameBorder","1"),a.setAttribute("scrolling","auto"),a.setAttribute("width",30),a.setAttribute("height",30),a.setAttribute("style","position: absolute; left: -100px; top:0px;"),a.style.setAttribute&&a.style.setAttribute("cssText","position: absolute; left: -100px; top:0px;"),document.body.appendChild(a),a},postMessage:function(a,b){b===undefined&&(b="*"),this.proxyIFrameElement===null?Porthole.error("Can't send message because no proxy url was passed in the constructor"):(sourceWindowName=window.name,this.proxyIFrameElement.setAttribute("src",this.proxyIFrameLocation+"#"+a+"&sourceOrigin="+escape(this.getOrigin())+"&targetOrigin="+escape(b)+"&sourceWindowName="+sourceWindowName+"&targetWindowName="+this.targetWindowName),this.proxyIFrameElement.height=this.proxyIFrameElement.height>50?50:100)},addEventListener:function(a){return this.eventListeners.push(a),a},removeEventListener:function(a){try{var b=this.eventListeners.indexOf(a);this.eventListeners.splice(b,1)}catch(c){this.eventListeners=[],Porthole.error(c)}},dispatchEvent:function(a){for(var b=0;b<this.eventListeners.length;b++)try{this.eventListeners[b](a)}catch(c){Porthole.error("Exception trying to call back listener: "+c)}}},Porthole.WindowProxyHTML5=function(a,b){b===undefined&&(b=""),this.targetWindowName=b},Porthole.WindowProxyHTML5.prototype={postMessage:function(a,b){b===undefined&&(b="*"),this.targetWindowName===""?targetWindow=top:this.targetWindowName==="top"||this.targetWindowName==="parent"?targetWindow=window[this.targetWindowName]:targetWindow=parent.frames[this.targetWindowName],targetWindow.postMessage(a,b)},addEventListener:function(a){return window.addEventListener("message",a,!1),a},removeEventListener:function(a){window.removeEventListener("message",a,!1)},dispatchEvent:function(a){var b=document.createEvent("MessageEvent");b.initMessageEvent("message",!0,!0,a.data,a.origin,1,window,null),window.dispatchEvent(b)}},typeof window.postMessage!="function"?(Porthole.trace("Using legacy browser support"),Porthole.WindowProxy=Porthole.WindowProxyLegacy,Porthole.WindowProxy.prototype=Porthole.WindowProxyLegacy.prototype):(Porthole.trace("Using built-in browser support"),Porthole.WindowProxy=Porthole.WindowProxyHTML5,Porthole.WindowProxy.prototype=Porthole.WindowProxyHTML5.prototype),Porthole.WindowProxy.prototype.post=function(a){this.postMessage(Porthole.WindowProxy.serialize(a))},Porthole.WindowProxy.splitMessageParameters=function(a){if(typeof a=="undefined"||a===null)return null;var b={},c=a.split(/&/);for(var d in c)if(c.hasOwnProperty(d)){var e=c[d].split("=");typeof e[1]=="undefined"?b[e[0]]="":b[e[0]]=e[1]}return b},Porthole.WindowProxy.serialize=function(a,b){var c,d,e,f=[];a=a||{};for(c in a)a.hasOwnProperty(c)&&typeof a[c]!="undefined"&&(d=b?b+"."+c:c,e=a[c],f.push(typeof e=="object"?Porthole.WindowProxy.serialize(e,d):encodeURIComponent(d)+"="+encodeURIComponent(e)));return f.join("&")},Porthole.WindowProxy.unserialize=function(a){var b={},c,d=a.split("&"),e=function(a,b,c){a=a||{},b=b.split(".");var d=decodeURIComponent(b.shift());return a[d]=b.length?e(a[d],b.join("."),c):c,a};for(var f in d)if(d.hasOwnProperty(f)){var g=d[f].split("=");g[1]=decodeURIComponent(g[1]||""),b=e(b,g[0],g[1])}return b},Porthole.MessageEvent=function a(a,b,c){this.data=a,this.origin=b,this.source=c},Porthole.WindowProxyDispatcher={forwardMessageEvent:function(a){var b=document.location.hash;if(b.length>0){b=b.substr(1),m=Porthole.WindowProxyDispatcher.parseMessage(b),m.targetWindowName===""?targetWindow=top:m.targetWindowName==="top"||m.targetWindowName==="parent"?targetWindow=window[m.targetWindowName]:targetWindow=parent.frames[m.targetWindowName];var c=Porthole.WindowProxyDispatcher.findWindowProxyObjectInWindow(targetWindow,m.sourceWindowName);c?c.origin==m.targetOrigin||m.targetOrigin=="*"?(a=new Porthole.MessageEvent(m.data,m.sourceOrigin,c),c.dispatchEvent(a)):Porthole.error("Target origin "+c.origin+" does not match desired target of "+m.targetOrigin):Porthole.error("Could not find window proxy object on the target window")}},parseMessage:function(a){if(typeof a=="undefined"||a===null)return null;params=Porthole.WindowProxy.splitMessageParameters(a);var b={targetOrigin:"",sourceOrigin:"",sourceWindowName:"",data:""};b.targetOrigin=unescape(params.targetOrigin),b.sourceOrigin=unescape(params.sourceOrigin),b.sourceWindowName=unescape(params.sourceWindowName),b.targetWindowName=unescape(params.targetWindowName);var c=a.split(/&/);return c.length>3&&(c.pop(),c.pop(),c.pop(),c.pop(),b.data=c.join("&")),b},findWindowProxyObjectInWindow:function(a,b){a.RuntimeObject&&(a=a.RuntimeObject());if(a)for(var c in a)if(a.hasOwnProperty(c))try{if(a[c]!==null&&typeof a[c]=="object"&&a[c]instanceof a.Porthole.WindowProxy&&a[c].getTargetWindowName()==b)return a[c]}catch(d){}return null},start:function(){window.addEventListener?window.addEventListener("resize",Porthole.WindowProxyDispatcher.forwardMessageEvent,!1):document.body.attachEvent?window.attachEvent("onresize",Porthole.WindowProxyDispatcher.forwardMessageEvent):Porthole.error("Can't attach resize event")}};